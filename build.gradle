plugins {
    id 'java-library'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.jetbrains.kotlin.jvm' version '2.2.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.2.10'
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed" //, "standardOut", "standardError"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
    useJUnitPlatform()
    maxHeapSize = '10G'
}

shadowJar { zip64 = true }

jar {
    manifest {
        attributes(
                'Main-Class': 'AsterixDataSource'
        )
    }
}

repositories { mavenCentral() }

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

dependencies {
    implementation "org.apache.commons:commons-lang3:3.14.0"
    implementation 'org.rocksdb:rocksdbjni:9.10.0'
    implementation 'org.json:json:20250107'
    implementation 'org.locationtech.jts:jts-core:1.20.0'
    implementation 'org.locationtech.jts.io:jts-io-common:1.20.0'
    implementation 'org.jetbrains.kotlinx:dataframe:0.15.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.0"
    implementation "org.openjdk.jol:jol-core:0.16"
    implementation "io.lettuce:lettuce-core:6.3.0.RELEASE"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.15.2"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.17.1"
    implementation "com.fasterxml.jackson.core:jackson-core:2.17.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.slf4j:slf4j-simple:2.0.17"
    // implementation "ch.qos.logback:logback-classic:1.4.14"

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.0"
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

jar {
    exclude 'dataset/**'
}

defaultTasks 'clean', 'build', 'check', 'shadowJar'